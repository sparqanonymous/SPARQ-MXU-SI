#ifndef __SPARQ_VERILATOR_DEFINES_H__
#define __SPARQ_VERILATOR_DEFINES_H__


#define CEILDIV(x,y) (((x) + (y) -1)/(y))
#define MAX(x,y) ( ( (x) > (y) ) ? (x) : (y) )
#define MIN(x,y) ( ( (x) < (y) ) ? (x) : (y) )


#define DDR_WIDTH_BYTE 32
#define FSIZE_BYTE 2
#define QSIZE_BYTE 1

#define INT_SIZE 4

#define ARRAY_DIMENSION 8

#define IN_BUFFER_SIZE 0x10000
#define OUT_BUFFER_SIZE 0x10000 

#define AXI_A_IN_SIZE_BYTES (ARRAY_DIMENSION/2)
#define AXI_A_META_IN_SIZE_BYTES (ARRAY_DIMENSION/2)
#define AXI_B_IN_SIZE_BYTES (ARRAY_DIMENSION*FSIZE_BYTE)
#define AXI_C_IN_SIZE_BYTES (ARRAY_DIMENSION*FSIZE_BYTE)
#define AXI_C_OUT_SIZE_BYTES (ARRAY_DIMENSION*FSIZE_BYTE)

#define COMMAND_PE_RESET 1
#define COMMAND_GEMM0 2
#define COMMAND_GEMM1 3
#define COMMAND_GEMM2 4
#define COMMAND_AXI_A_LOAD0 5
#define COMMAND_AXI_A_LOAD1 6
#define COMMAND_AXI_A_LOAD2 7
#define COMMAND_AXI_A_META_LOAD0 8
#define COMMAND_AXI_A_META_LOAD1 9
#define COMMAND_AXI_A_META_LOAD2 10
#define COMMAND_AXI_B_LOAD0 11
#define COMMAND_AXI_B_LOAD1 12
#define COMMAND_AXI_B_LOAD2 13
#define COMMAND_AXI_C_LOAD0 14
#define COMMAND_AXI_C_LOAD1 15
#define COMMAND_AXI_C_LOAD2 16
#define COMMAND_AXI_C_STORE0 17
#define COMMAND_AXI_C_STORE1 18
#define COMMAND_AXI_C_STORE2 19

#define STATE_IDLE 0
#define CONV_WORKING 1
#define STATE_WORKING 1

#endif //__SPARQ_VERILATOR_DEFINES_H__